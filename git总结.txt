1.git工作区，暂存区（.git下的index目录），版本库（.git);
2.git用户信息配置
	--system :读取etc/confi系统路径下的文件；
	--global:读取用户目录下的config文件
		git config --list展现配置变量
		git config --global user.name 全局的用户名字
		git config --global --list 全局的配置列表
3.生成公钥
	ssh-keygen -t rsa -C "jingjingshenye@gmail.com"
	将公钥添加到git的ssh上
	
4.创建仓库
	git init
	git init rep指定目录创建仓库
5.文件添加到暂存区
	git add . 添加所有文件
	git add filename 添加一个或多个指定文件
	
6.查看git当前状态
	git status -s(以简明方式）这个状态只能看到工作区和暂存区的，当提交后整个状态就清除了。
	
7.比较文件差异
	git diff 比较工作区和暂存区差异
	git diff --cached [<path>...] 比较暂存区和版本库的文件差异
	git diff HEAD [<path>...]：比较工作区与版本库的文件差异
　　git diff commit-id  [<path>...] ：比较工作区与暂存区提交id的差异
　　git diff --cache commit-id  [<path>...] ：比较暂存区与版本库id的差异

8.删除文件
	git rm file 删除文件，并将之索引也删除
	git rm -f file 强制删除
	git rm --cached  删除缓存中的文件
	
9.移动或改名
	git mv a.file b.file 同目录改名，非同目录移动
10.提交文件
	git commit -m 提交暂存区文件
11.分支管理
查看分支：git branch

　　　　创建分支：git branch branchName

　　　　切换分支：git checkout branchName

　　　　创建并切换分支：git checkout -b branchName

　　　　合并分支：git merge --no-ff -m '' branckName

　　　　删除分支：git branch -d branchName

　　　　拉取远程最新分支不会合并：git fetch

　　　　拉取远程分支并且会合并：git pull

12.查看tag
	git tag
13.添加标签
	git tag - a tagName -m '描述'
	
14.查看历史
	git log 历史提交记录
	git log --oneline 历史提交记录的简洁版
	git log --oneline --graph 单行和图的形式查看
	
15.删除远程仓库
	git remote rm 仓库名字
	
16.常见命令
	git checkout fileName 将缓存区的文件拉下拉，如果存在同名文件会替换，其实就是丢弃工作区的文件的改动
	git rm --cached filename 将缓存区的文件删除
	git commit --amend 撤销上一次提交并将暂存区文件重新提交，说明还是上次说明
	
17.从版本库里恢复到缓存区
	git reset HEAD -- <file> 将版本库里面的文件拉到缓存区，同名的会被覆盖，增添的不会改变
	
18.仓库迁移
	1.首先将代码分支全拉下来并且合并：git pull

　　2.修改origin源的url:git remote set-url origin 更换远程仓库地址,把url更换为新的url地址

　　　　或git remote rm origin；git remote add origin remote_git_address remote_git_address为新服务器gitLab上新建的同名项目地址

　　3.git push origin --all 推送主干和分支

　　4.git push --tags 推送标签
