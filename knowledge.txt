你太见外，任何个人，团体都很难在你心里占到一席之地，你很活跃，也很有能力，但你
很封闭，你总是在自己的世界里，想自己的，做自己的

你的战友甚至你的敌人，需要你去理解，融洽，经历

你经历的每个地方，每个人，每件事，都需要你付出时间和生命，可你从来没付出感情
你总是把他们冷冰冰的扔掉，那你的努力是为了什么，为了一个结果虚耗人生，

我有什么，要什么，放弃什么
所有的问题对不对并不是关键，关键是我们是否思考过，思考过自己的选择，人生的意义，奋斗的方向。
找工作如同找对象，真正的爱情不会让你觉得时间长，但不合适的婚姻确实度日如年，工作亦是如此。
找到自己的快乐点

游戏常用算法
1. 贪心其实生活中基本都用得到贪心算法，在面对陌生事物时，优先选择直观上最划算的，就是贪心，游戏里也一样，各种计算机制都会用到贪心。从flash小游戏，到匹配机制，都可以用到贪心。
2. 排序排序也一样，好友排序，属性排序，各种各样的场景下都会用到排序，最基础的算法。
3. 堆堆这种数据结构相对用得最多的应该是最大堆，即构建一个堆，每次可以O(1)取其中的最大数，O(logn)添加元素，往往用于需要动态维护最大值的情况。
4. 队列、栈队列是相对而言用的最多的数据结构之一，无论是搜索中的广度优先搜索，还是协程的应用都需要用到先进先出的队列。栈这种数据结构在游戏里被用到的也相对不少，最简单的纸牌游戏就是通过栈的数据结构实现的。
5. 搜索搜索在做算法的时候用得很多，但做游戏的时候一般很少使用。原因有两个，一个是写搜索相对而言需要更小心，其他的地方写错了可能只是这里停下出错了，但搜索出错往往会导致死循环，二是，搜索的应用场景较小，搜索主要适用于对整个游戏所有场景进行遍历的小工具上，其他情况下游戏用到穷举的可能没那么多。
6. 动态规划和搜索一样，因为游戏往往是让玩家去做决策，所以可能动态规划很少被用到。但很多小游戏都有一定的动态规划思维在其中，就比如出去采集资源，怎么样可以让带回去的资源在有限的背包容量下价值最高。
7. SPFA & Floyed寻路是很多游戏中不可或缺的一部分，SPFA，单源点最短路径，一般是用于自身的寻路系统，而floyed 一般是用于网格状棋盘的寻路系统。
8. AI 逻辑这里的 AI 逻辑不是人工智能，而是 NPC 的行动机制。往往依靠状态转移树或者状态转移方程来完成。游戏里算法还有很多，在大规模的线上对战中，还用得到一些复杂的预测算法，在游戏渲染里也会有大量的渲染算法，这些都需要你在今后的工作中自己去慢慢探索。

js要点
控制流
异常处理
数据模型
异步操作dom
nodejs
面向对象
前端框架
编译打包
正则



别去写什么 OS X 或者 gnome/kde下面的 GUI，写桌面学不到 linux的精髓，直接写 server代码： 
1. 实现简单的 HTTP服务器（支持 GET/POST/CGI），然后用浏览器访问，里面有个CGI留言板。
2. 实现一个简版 REDIS，或者给 Redis加10条命令，或者把后面存储引擎换成 unqlite，再开源
3. 给 apache实现一个 module，可以支持 lua来写服务。
4. 给 nginx写一个 python模块，可以python来写服务。
5. 用 C/C++/go写个代理翻墙软件，跑在你的海外租的 vps上。
6. 实现一套简单的 TCP RPC框架，并再基础上做一个简单聊天。
7. 阅读 Linux代码，应用层实现一个 Linux的定时器。
----------------
随便找了几个简单的，有意思的东西做一下。等你有了概念以后，可以尝试一些其他东西增加熟练度：
1. 构建分布式架构，比如用脚本模拟实现一个分布式文件系统。
2. 构建个简单的游戏服务器，比如模拟写个 RPG服务端，可以用 telnet玩。
3. 实现个简单的的分布式发布订阅系统。随便接入，任意PUB/SUB，有冗余。
4. 做一个 MySQL前端，可以分解任务，拆分到各个节点上执行，并将结果合并返回。找个好点的工作应该不难了。


$ git clone https://github.com/jmoon018/PacVim.git
$ cd PacVim
$ sudo make install
启动游戏安装成功后，可执行以下命令来启动游戏：$ pacvim [LEVEL_NUMER] [MODE]
其中：LEVEL_NUMER：表示关卡号MODE：表示难度，n - 正式模式，h - 困难模式例如，我们要玩第 5 关，正式模式的游戏，我们可以这样启动游戏：$ pacvim 5 n
而如果我们仅仅想从头开始玩游戏，则只需这样：$ pacvim
下图是游戏运行后的情况：游戏看起来还是挺好玩的，至少比单纯去记那些命令要强很多。退出游戏游戏的退出很简单，只需按下 ESC 或者 q 即可。游戏规则如前文所述，游戏的基本规则就是躲避怪物，吃完豆豆。但这里面，豆豆是一个个白色单词，你在经过时，一个个字符就会变成绿色。在游戏里，主角是一个绿色方块，怪物是大写红色字母 G 。有两种障碍物：黄颜色的是代表墙壁，你不能越过墙壁；青色的飘号键 ~ ，它不会攻击你，但你也不能碰它，一碰你就挂。你一共有 3 条命，但在通过第 0，3，6，9 关时，会额外奖励一条生命。游戏一共 10 关，从 0 ~ 9，通过第 9 关后，将重新从第 0 关开始，但难度加大。a. 胜利的条件操作绿色方块，将白色字符变成绿色字符，当所有的白色字符都变成绿色时，你就赢了那一关，进入到下一关。全程操作使用 Vim 命令。b. 失败的条件如果你碰到了怪物（大写字母 G）或飘号键 ~ ，你就挂了，失去一条生命。当所有生命都失去时，游戏就结束了。既然是用来学习 Vim 操作的，那我们肯定要知道 Vim 有哪一些指令。常用指令如下图：通过这个游戏，在紧张和压力下，你的 Vim 命令不知不觉就记住了，后面再去操作 Vim 编辑器时，简直会运指如飞！一起来玩玩吧！